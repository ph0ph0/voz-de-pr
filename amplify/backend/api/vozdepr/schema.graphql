type User
  @model
  @aws_api_key
  @aws_cognito_user_pools
  @auth(rules:[
    {
      allow:owner,
      ownerField:"id",
      operations:[create,read,update,delete]
    }
  ])
  {
    id:ID!
    username:String!
    email:AWSEmail!
    avatar:S3Object!
    subjects:[Subject]@connection
    createdAt:AWSDateTime
    updatedAt:AWSDateTime
  }

#Objects - A Subject represents both a Cause and a Post

type Subject 
  @model
  @aws_api_key
  @aws_cognito_user_pools
  @auth(rules:[
  {
    allow:owner,
    operations:[create,update,delete]
  },
  {
    allow:public,
    operations:[read]
  }
  ])
  @key(
    name:"subjectsByUser",
    fields:["createdBy", "type"],
    queryField:"subjectsByUser"
  )
  {
    id:ID!
    createdBy:ID
    createdAt:AWSDateTime
    author:String
    title:String!
    subjectContent:String!
    subjectImage:S3Object
    comments:[Comment]@connection
    votes:Int
    type: SubjectType
  }

enum SubjectType {
  cause
  post
}


type Comment
  @model
  @aws_api_key
  @aws_cognito_user_pools
  @auth(rules:[
  {
    allow:owner,
    operations:[create,update,delete]
  },
  {
    allow:public,
    operations:[read]
  }
  ])
  {
    id:ID!
    createdBy:ID
    author:String
    createdAt:AWSDateTime
    text:String!
    votes:Int
    subject: Subject @connection
  }

#May need to add a comment type enum ie postComment and causeComment

#VoteType

type Vote
  @model
  @aws_api_key
  @aws_cognito_user_pools
  @auth(rules:[
  {
    allow:owner,
    operations:[create,update,delete]
  },
  {
    allow:public,
    operations:[read]
  }
  ])
  @key(
    name:"votesOnAnSubjectsByUser",
    fields:["subjectVotedOnId","vote","createdBy"],
    queryField:"votesOnSubjectByUser"
  )
  {
    """
    idofvote=userId+post/comment/causeid+post/cause/postComment/causeComment
    ieid=12233455_6786758_causeComment
    objectIdistheidoftheobjectbeingvotedon.
    """
    id:ID!
    subjectVotedOnId:ID!
    createdBy:ID
    createdAt:AWSDateTime
    vote:VoteType
    voteOn:VoteOnType
  }

#Inputsandenums

input VoteInput{
  id:ID!
  vote:VoteType!
  voteOn:VoteOnType!
}

enum VoteType {
  up
  down
}

enum VoteOnType{
  post
  cause
}

#RichMedia

type S3Object{
  bucket:String!
  region:String!
  key:String!
}